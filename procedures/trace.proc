# This script is part of the utils CPrAN plugin for Praat.
# The latest version is available through CPrAN or at
# <http://cpran.net/plugins/utils>
#
# The utils plugin is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# The utils plugin is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with utils. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2016 Jose Joaquin Atria

#! ~~~ params
#! in:
#!   .msg$: A string to print to trace device
#! ~~~
#!
#! Print a trace message, either to STDOUT or to a file.
#!
#! The behaviour of this procedure is controlled at runtime by a number of
#! different global flags:
#!
#! trace.enable
#!   : If true, the procedure prints the message. Otherwise, this procedure
#!     does nothing. False by default.
#! trace.output$
#!   : The filename of an external trace file. If empty, the trace is printed
#!     to the Info window (or STDOUT) instead. Empty by default.
#! trace.cleared
#!   : If false, the device (file or Info window) will be cleared before
#!     printing the next message. Otherwise, messages will be appended. By
#!     default, it is set to true when priting to a file, and false otherwise.
#! trace.level
#!   : In addition to `trace.enable`, the procedure will only print when this
#!     variable has a value greater than 1. This is useful for dynamically
#!     increasing or decreasing the verbosity of a script. Set to 1 by default.
#!
#! The default values of these flags mean that, unless action is taken, this
#! procedure will produce no output.
#!
procedure trace: .msg$
  if !variableExists("trace.level")
    .level = 1
  endif

  if !variableExists("trace.enable")
    .enable = 0
  endif

  if .enable and .level > 0
    if variableExists("plan.current_plan")
      # In testing mode, preppend a hash to avoid interrupting TAP stream
      .pre$ = "# "
    else
      .pre$ = ""
    endif

    if !variableExists("trace.output$")
      .output$ = ""
    endif

    if !variableExists("trace.cleared")
      # If tracing to a filename, do not clear by default
      .cleared = length(.output$)
    endif

    if .output$ != ""
      if !.cleared
        .cleared = 1
        writeFileLine: .output$, ""
      endif
      appendFileLine: .output$, .pre$, .msg$
    else
      if !.cleared
        .cleared = 1
        clearinfo
      endif
      appendInfoLine: .pre$, .msg$
    endif
  endif
endproc
