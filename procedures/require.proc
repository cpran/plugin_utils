# This script is part of the utils CPrAN plugin for Praat.
# The latest version is available through CPrAN or at
# <http://cpran.net/plugins/utils>
#
# The utils plugin is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
#
# The utils plugin is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with utils. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2014-2016 Jose Joaquin Atria

include ../../plugin_utils/procedures/utils.proc

call require 5.3.46

#! ~~~ params
#! in:
#!   .version$: A version string to require.
#! seealso:
#!   - utils@compareSemVer
#! ~~~
#!
#! Makes sure the current version is at least a certain version. If the current
#! Praat version is lower than the one specified, the procedure will halt the
#! calling script with a useful error message.
#!
#! Praat version strings are interpreted as semantic version strings, and
#! compared with the `@compareSemVer` procedure.
#!
procedure require .version$
  call compareSemVer "'praatVersion$'" '.version$'
  if compareSemVer.newer > 0
    exit This script requires Praat v'.version$'.
      ... Please update Praat'newline$'
  endif
endproc

procedure comparePraatVersionStrings (.a$, .b$)
#! ~~~ params
#! in:
#!   .a$: A version string to compare
#!   .b$: Another version string to compare
#! deprecated: utils@compareSemVer
#! ~~~
#!
#! Compares two version strings to see which one is newer. Version strings are
#! expected to be in the same format as those used by Praat and, more generally,
#! recommended by the semantic versioning proposal. These have three numeric
#! components separated by periods. Version components are compared from left
#! to right, and later components are only checked when earlier components are
#! equal.
#!
#! This procedure is deprecated. Use instead `@compareSemVer`.
#!
procedure comparePraatVersionStrings .a$ .b$
  appendInfoLine: "W: comparePraatVersionStrings is deprecated. ",
    ... "Use ""compareSemVer"" instead.", newline$
  call compareSemVer ".a$" '.b$'
  .newer = compareSemVer.newer
endproc

#! ~~~ params
#! in:
#!   .a$: A version string to compare
#!   .b$: Another version string to compare
#! ~~~
#!
#! Compares two version strings to see which one is newer. Version strings are
#! expected to be in the same format as those used by Praat and, more generally,
#! recommended by the semantic versioning proposal. These have three numeric
#! components separated by periods. Version components are compared from left
#! to right, and later components are only checked when earlier components are
#! equal.
#!
procedure compareSemVer .a$ .b$
  if .a$ != .b$
    @split(".", .a$)
    call split "." '.a$'
    for .i to 3
      .a[.i] = if .i <= split.length then number(split.array$[.i]) else 0 fi
    endfor

    @split(".", .b$)
    call split "." '.b$'
    for .i to 3
      .b[.i] = if .i <= split.length then number(split.array$[.i]) else 0 fi
    endfor

    for .i to 3
      if .a[.i] > .b[.i]
        .newer = -1
        .i = 3
      elsif .a[.i] < .b[.i]
        .newer = 1
        .i = 3
      else
        .newer = 0
      endif
    endfor
  else
    .newer = 0
  endif
endproc
